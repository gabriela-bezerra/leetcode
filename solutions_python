# def removeDuplicates(nums):
#     """ Remove duplicates from sorted array in place. """

#     """
#     Input: nums = [0,0,1,1,1,2,2,3,3,4]
#     Output: 5, nums = [0,1,2,3,4,_,_,_,_,_]

#     """

#     # Two pointers approach

#     current = 0

#     for idx in range(len(nums)):
#             if nums[idx] != nums[current]:
#                 current += 1
#                 nums[current] = nums[idx]

#     return current + 1 #last unique index plus one


# def maxProfit(prices):
#     """ Finds best time to buy and sell stock """

#     """
#     Input: prices = [7,1,5,3,6,4]
#     Output: 7

#     Input: prices = [1,2,3,4,5]
#     Output: 4

#     Input: prices = [7,6,4,3,1]
#     Output: 0

#     """
#     max_profit = 0

#     for i in range(1,len(prices)):
#         if prices[i] - prices[i-1] > 0:
#             max_profit += prices[i] - prices[i -1]

# #     return max_profit


# class Solution:
#     def rotate(self, nums: List[int], k: int) -> None:
#         """
#         Do not return anything, modify nums in-place instead.
#         """
#         k = k % len(nums)

#         nums[:] = nums[-k:] + nums[:-k]


# class Solution:
#     def containsDuplicate(self, nums: List[int]) -> bool:

#         seen = set()

#         for n in nums:
#             if n in seen:
#                 return True
#             seen.add(n)
#         return False
